#!/bin/bash
# SOURCE THIS FILE FOR HEREDOC INTERPOLATION

# Normal
__FRONT=`cat <<-LIB
# $s_appname's Functions and Variables

# Vars
__cwd=\\\`pwd\\\`
prgroot="\\\$HOME/.${s_appname,,}"

# Config
__loadcfg() {
  local cfg="\\\$prgroot/.cfg"
  editor=\\\`cat \\\$cfg | grep 'editor' | cut -d '=' -f2\\\`
  defaulttype=\\\`cat \\\$cfg | grep 'defaulttype' | cut -d '=' -f2\\\`
}
# Config vars will be set via function in-case of needing reloaded
__loadcfg

# Funcs

LIB
`
__ARGFUNC=`cat <<-ARG
__args() {
  # Process args
  while [[ "\\\$1" =~ '-' ]]; do
    # End case statements with 'exit;;' to ensure program only runs that argument
    # Otherwise use 'exit;;' when you want to bail out due to erroneous behaviour
    case "\\\$1" in
      -h | --help )
        cat \\\$prgroot/help
        exit;;
      -v | --version )
        cat \\\$prgroot/version
        exit;;
      * ) # Catch-all
        cat \\\$prgroot/help | head -1
        echo "\\"\\\$1\\" is not an argument!"
        exit;;
    esac
  shift; done
}
ARG
`
__ALTFUNC=`cat <<-ALT
__args() {
  # Process args
  while [[ "\\\$1" =~ '-' ]]; do
    # End case statements with 'return;;' to allow for arglist to be passed around and continue execution
    # Otherwise use 'exit;;' when you want to bail out due to erroneous behaviour
    # Each statement should look like this:
    # <ARG> | <ALTARGVERSION> ); shift
    #   DATA VALIDATION
    #   <FUNC> "\\\$@"
    #   return;;
    case "\\\$1" in
      -\\? | -h | --help )
        cat \\\$prgroot/help
        exit;;
      -v | --version )
        cat \\\$prgroot/version
        exit;;
      * ) # Catch-all
        cat \\\$prgroot/help | head -1
        echo "\\"\\\$1\\" is not an argument!"
        exit;;
    esac
  shift; done
}
ALT
`
__CMDFUNC=`cat <<-CMD
__cmds() {
  # Process args
  while [[ true ]]; do
    # End case statements with 'exit;;' to run just the one command
    # Otherwise use 'exit;;' when you want to bail out due to erroneous behaviour
    case "\\\$1" in
      help )
        cat \\\$prgroot/help
        exit;;
      -v | version )
        cat \\\$prgroot/version
        exit;;
      * ) # Catch-all
        cat \\\$prgroot/help | head -1
        echo "\\"\\\$1\\" is not an argument!"
        exit;;
    esac
  shift; done
}
CMD
`
__BACK=`cat <<-BAK
error() {
  local msg="\\\$1"

  echo -e '\e[0;1;31m[ERROR]\e[0;0;0m '"\\\$msg" >&2
}

verbose() {
  local msg="\\\$1"

  echo -e '\e[0;1;35m[VERBOSE]\e[0;0;0m '"\\\$msg"
}
BAK
`

__SHLIB="${__FRONT}\n$([[ $__ALT ]] && echo "$__ALTFUNC" || echo "$__ARGFUNC")\n\n$([[ $__CMD ]] && echo "$__CMDFUNC\n")${__BACK}"
# EOF